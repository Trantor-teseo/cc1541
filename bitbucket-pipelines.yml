pipelines:
  default:
    - step:
        name: Build and test Linux glibc
        script:
          - export DEB_BUILD_MAINT_OPTIONS="hardening=+all"
          - export CPPFLAGS="$(dpkg-buildflags --get CPPFLAGS)"
          - export CFLAGS="$(dpkg-buildflags --get CFLAGS)"
          - export CXXFLAGS="$(dpkg-buildflags --get CXXFLAGS)"
          - export LDFLAGS="$(dpkg-buildflags --get LDFLAGS)"
          - make -j2 check CPPFLAGS="$CPPFLAGS" CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" LDFLAGS="$LDFLAGS"
          - strip -g cc1541
          - mv cc1541 cc1541_lin_glibc_x86
        artifacts:
          - cc1541_lin_glibc_x86
    - step:
        name: Build other platforms
        trigger: manual
        script:
          - echo "Building other platforms"
    - parallel:
          - step:
              name: Build and test Windows
              image: purplekarrot/mingw-w64-i686
              script:
                - make -j2 cc1541 test_cc1541 CC=i686-w64-mingw32-gcc
                - mv cc1541 cc1541.exe
                - mv test_cc1541 test_cc1541.exe
                - wine ./test_cc1541.exe ./cc1541.exe
              artifacts:
                - cc1541.exe
          - step:
              name: Build MacOS
              image: andrewd/osxcross
              script:
                - make -j2 cc1541 test_cc1541 CC=o64-clang
                - mv cc1541 cc1541_mac
                - mv test_cc1541 test_cc1541_mac
              artifacts:
                - cc1541_mac
                - test_cc1541_mac
    - step:
        name: Create package
        image: kramos/alpine-zip
        script:
          - zip -o cc1541.zip cc1541_lin_glibc_x86 cc1541.exe cc1541_mac LICENSE.txt README.md
        artifacts:
          - cc1541.zip
